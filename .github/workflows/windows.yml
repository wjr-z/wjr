# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    # The type of runner that the job will run on
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache vcpkg artifacts
        uses: actions/cache@v3
        id: cache-vcpkg
        with:
          path: |
            ${{ github.workspace }}/vcpkg/downloads
            ${{ github.workspace }}/vcpkg/installed
            ${{ github.workspace }}/vcpkg/buildtrees
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}-
            ${{ runner.os }}-vcpkg-

      - name: Init submodule
        run: git submodule update --init --recursive

      - name: Install GMP
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: vcpkg install gmp:x64-windows

      - name: Configure CMake
        run: cmake -B build -GNinja -DCMAKE_BUILD_TYPE=Release
        working-directory: ./tests/units

      - name: Build
        run: cmake --build build --config Release --parallel
        working-directory: ./tests/units

      - name: run
        run: ./tests.exe
        working-directory: ./tests/units/build
